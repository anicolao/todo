rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    match /users/{document=**} {
      allow read, write: if request.auth != null;
    }
    match /lists/{listId}/{document=**} {
      allow create, read, write: if request.auth != null &&						
												 exists(/databases/$(database)/documents/editors/$(listId)/$(request.auth.uid)/editor);
		}
    match /editors/{listId}/{uid}/editor {
      allow delete: if request.auth != null && exists(/databases/$(database)/documents/editors/$(listId)/$(request.auth.uid)/editor);
      allow create, read, write: if request.auth != null && 
         (exists(/databases/$(database)/documents/editors/$(listId)/$(request.auth.uid)/editor) ||
				 (uid == request.auth.uid));
		}
    match /activity/{document=**} {
      allow read: if request.auth != null;
		}
    match /share/{document=**} {
      allow read, write: if request.auth != null;
		}
    match /{name=**}/requests/{action} {
      // Read all collections named 'requests' in entire db where the target is the current user.
      allow read: if request.auth.uid == resource.data.target;
    }
    match /from/{uid}/to/{uid2}/requests/{action} {
      // Force data's creator to be uid, and data's target to be uid2.
      allow write: if uid == request.auth.uid && request.resource.data.creator == request.auth.uid && request.resource.data.target == uid2;
		}
	}
}